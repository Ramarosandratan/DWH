# Script PowerShell pour arr√™ter la stack e-commerce avec Airflow
# Auteur: Data Team
# Description: Arr√™te tous les services de la stack e-commerce

param(
    [switch]$RemoveVolumes,
    [switch]$RemoveImages,
    [switch]$Help
)

function Show-Help {
    Write-Host "=== SCRIPT D'ARR√äT E-COMMERCE STACK ===" -ForegroundColor Red
    Write-Host ""
    Write-Host "Usage: .\stop-ecommerce-stack.ps1 [OPTIONS]" -ForegroundColor Yellow
    Write-Host ""
    Write-Host "Options:" -ForegroundColor Cyan
    Write-Host "  -RemoveVolumes    Supprime √©galement les volumes Docker (DONN√âES PERDUES!)"
    Write-Host "  -RemoveImages     Supprime √©galement les images Docker"
    Write-Host "  -Help             Affiche cette aide"
    Write-Host ""
    Write-Host "Exemples:" -ForegroundColor Magenta
    Write-Host "  .\stop-ecommerce-stack.ps1                      # Arr√™t simple"
    Write-Host "  .\stop-ecommerce-stack.ps1 -RemoveVolumes       # Arr√™t + suppression donn√©es"
    Write-Host "  .\stop-ecommerce-stack.ps1 -RemoveImages        # Arr√™t + suppression images"
    Write-Host ""
    Write-Host "‚ö†Ô∏è  ATTENTION:" -ForegroundColor Yellow
    Write-Host "  -RemoveVolumes supprimera TOUTES les donn√©es des bases!" -ForegroundColor Red
}

if ($Help) {
    Show-Help
    exit 0
}

Write-Host "=== ARR√äT DE LA STACK E-COMMERCE ===" -ForegroundColor Red

# V√©rifier que Docker est en cours d'ex√©cution
try {
    docker version | Out-Null
    Write-Host "‚úì Docker est disponible" -ForegroundColor Green
} catch {
    Write-Host "‚úó Docker n'est pas disponible" -ForegroundColor Red
    exit 1
}

# Arr√™ter les services
Write-Host "üõë Arr√™t des services..." -ForegroundColor Yellow

$composeCommand = "docker-compose -f docker-compose-extended.yaml down"

if ($RemoveVolumes) {
    Write-Host "‚ö†Ô∏è  SUPPRESSION DES VOLUMES DEMAND√âE - TOUTES LES DONN√âES SERONT PERDUES!" -ForegroundColor Red
    $confirmation = Read-Host "√ätes-vous s√ªr? Tapez 'OUI' pour confirmer"
    if ($confirmation -eq "OUI") {
        $composeCommand += " -v"
        Write-Host "üóëÔ∏è  Les volumes seront supprim√©s" -ForegroundColor Yellow
    } else {
        Write-Host "‚ùå Suppression des volumes annul√©e" -ForegroundColor Green
    }
}

Write-Host "Commande: $composeCommand" -ForegroundColor Gray
Invoke-Expression $composeCommand

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Services arr√™t√©s avec succ√®s" -ForegroundColor Green
} else {
    Write-Host "‚ùå Erreur lors de l'arr√™t des services" -ForegroundColor Red
}

# Supprimer les images si demand√©
if ($RemoveImages) {
    Write-Host "üóëÔ∏è  Suppression des images Docker..." -ForegroundColor Yellow
    
    $images = @(
        "apache/airflow:3.0.0",
        "mysql:8.0",
        "postgres:13",
        "redis:7.2-bookworm",
        "phpmyadmin/phpmyadmin",
        "dpage/pgadmin4"
    )
    
    foreach ($image in $images) {
        try {
            docker rmi $image -f 2>$null
            Write-Host "  ‚úì Image $image supprim√©e" -ForegroundColor Green
        } catch {
            Write-Host "  ‚ö†Ô∏è  Image $image non trouv√©e ou en cours d'utilisation" -ForegroundColor Yellow
        }
    }
}

# Nettoyer les ressources orphelines
Write-Host "üßπ Nettoyage des ressources orphelines..." -ForegroundColor Yellow
docker system prune -f | Out-Null

# Afficher l'√©tat final
Write-Host ""
Write-Host "üìä √âtat final des conteneurs:" -ForegroundColor Cyan
docker ps -a --filter "name=airflow" --filter "name=mysql" --filter "name=postgres" --filter "name=redis" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"

Write-Host ""
if ($RemoveVolumes) {
    Write-Host "‚úÖ STACK COMPL√àTEMENT SUPPRIM√âE" -ForegroundColor Red
    Write-Host "   Toutes les donn√©es ont √©t√© supprim√©es." -ForegroundColor Yellow
} else {
    Write-Host "‚úÖ STACK ARR√äT√âE" -ForegroundColor Green
    Write-Host "   Les donn√©es sont conserv√©es dans les volumes Docker." -ForegroundColor Yellow
    Write-Host "   Utilisez .\start-ecommerce-stack.ps1 pour red√©marrer." -ForegroundColor Cyan
}

Write-Host ""
Write-Host "=== FIN DU SCRIPT ===" -ForegroundColor Red